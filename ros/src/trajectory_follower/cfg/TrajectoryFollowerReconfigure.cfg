#!/usr/bin/env python
PACKAGE = "trajectory_follower"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

#       Name                 						Type               Description                         Default
gen.add("pub_pedals",       						bool_t,     0, "Publish throttle and brake",       True)
gen.add("pub_steering",     						bool_t,     0, "Publish steering",                 True)

#       Name                 						Type         Description                         Default   Min     Max
gen.add("decel_max",         						double_t,   0, "Deceleration limit (m/s^2)",       3.0,      0.0,    8.0)
gen.add("accel_max",         						double_t,   0, "Acceleration limit (m/s^2)",       3.0,      0.0,    8.0)
gen.add("max_lat_accel",     						double_t,   0, "Maximum lateral accel (m/s^2)",    8.0,      0.0,    10.0)
gen.add("steer_kp",          						double_t,   0, "Steering feedback using gyro",     0.0,      0.0,    100.0)
gen.add("wheel_radius",      						double_t,   0, "Effective tire radius (m)",        0.33,     0.1,    0.5)
gen.add("vehicle_mass",      						double_t,   0, "Vehicle mass (kg)",                1736.35,  1650.0, 1800.0)
gen.add("fuel_capacity",     						double_t,   0, "Fuel tank capacity (gallons)",     13.5,     10.0,   20.0)
gen.add("speed_kp",          						double_t,   0, "Speed loop proportional gain",     2.0,      0.0,    100.0)
gen.add("accel_kp",          						double_t,   0, "Accel loop proportional gain",     0.4,      0.0,    8.0)
gen.add("accel_ki",          						double_t,   0, "Accel loop integral gain",         0.1,      0.0,    8.0)
gen.add("brake_deadband",    						double_t,   0, "Minimum decel for brakes (m/s^2)", 0.1,      0.0,    1.0)
gen.add("accel_tau",         						double_t,   0, "LPF time constant (s)",            0.5,      0.0,    10.0)
gen.add("LF",                                       double_t,   0, "wheel base",                       2.849,    2.849,  2.85)
gen.add("vel_command",                              double_t,   0, "velocity tracking command m/s",    2.78,      2.5,    33.0)
## Weigh of variables
gen.add("coeff_cte",                                int_t,      0,      "",     					 15,      0,        5000)
gen.add("coeff_epsi",                               int_t,      0,      "",      					 50,       0,        5000)
gen.add("coeff_vel",                                int_t,      0,      "",      					 50,      0,        5000)
gen.add("coeff_delta",                              int_t,      0,      "",      					 10,       0,        5000)
gen.add("coeff_accel",                              int_t,      0,      "",      					 0,         0,        5000)
gen.add("coeff_vel_delta",                          int_t,      0,      "",      				     10,       0,        5000)
gen.add("coeff_diff_vel",                           int_t,      0,      "",       					 10,       0,        5000)
gen.add("coeff_diff_delta",                         int_t,      0,      "",      					 50,       0,        5000)
gen.add("coeff_area",                               int_t,      0,      "",                          10,       0,        5000)
gen.add("kappa_for_area",                           double_t,   0,      "",      					 0.2,       0.0,      3.0)
gen.add("kappa_for_vel",                            double_t,   0,      "",      					 1.0,       0.0,      3.0)
gen.add("kappa_for_delta",                          double_t,   0,      "",      					 1.0,       0.0,      3.0)
gen.add("kappa_for_diff_delta",                     double_t,   0,      "",                          1.0,       0.0,      3.0)

## Boundary of varibles
gen.add("steer_lowerbound",                         double_t,   0,      "",      					-0.40,     -0.45,      0)
gen.add("steer_upperbound",                         double_t,   0,      "",    					     0.40,      0.0,      0.45)
gen.add("vel_lowerbound",                           double_t,   0,      "",      					 0.2,      -3.0,      0.5)
gen.add("vel_upperbound",                           double_t,   0,      "",      					 25.0,       0.0,      25.0)
gen.add("accel_lowerbound",                         double_t,   0,      "",     					-2.5,      -3.0,      0.0)
gen.add("accel_upperbound",                         double_t,   0,      "",      				     1.0,       0.0,      3.0)
gen.add("area_lowerbound",                          double_t,   0,      "",     					-3.0,      -5.0,      0.0)
gen.add("area_upperbound",                          double_t,   0,      "",      					 3.0,       0.0,      5.0)

## Boundary of constraints
gen.add("delta_constraints_lowerbound",             double_t,   0,      "",     					-0.1,     -1,        1)
gen.add("delta_constraints_upperbound",             double_t,   0,      "",     					 0.1,     -1,        1)
gen.add("vel_constraints_lowerbound",               double_t,   0,      "",     				     -0.5,      -1,        1)
gen.add("vel_constraints_upperbound",               double_t,   0,      "",      					  0.5,      -1,        1)
gen.add("accel_constraints_lowerbound",             double_t,   0,      "",     					 -0.5,      -1,        1)
gen.add("accel_constraints_upperbound",             double_t,   0,      "",      				      0.5,      -1,        1)

## Valve and other parameters
gen.add("is_latency",                               bool_t,     0,      "",      False)
gen.add("regularized_constant",                     double_t,   0,      "",      					  2.0,       0.0,      5.0)
gen.add("speed_up",                                 double_t,   0,      "",        					  0.0,      -1.0,      1.0)
gen.add("kappa_number",                             int_t,      0,      "",      					   10,        1,        40)
gen.add("dead_zone",                                double_t,   0,      "",      					 0.1,      0.0,      0.1)
gen.add("heading_compensation",                     double_t,   0,      "",     					-0.00,     -0.1,      0.1)

gen.add("lookingforward_time",                      double_t,   0,      "",      					  2.0,       0.0,      10.0)   
gen.add("lookingforward_distance_lowerbound",       double_t,   0,      "",      					  25.0,       0.0,      60.0)
gen.add("lookingforward_distance_upperbound",       double_t,   0,      "",      				          60.0,       0.0,      60.0)

gen.add("kappa_threshold",                          double_t,   0,      "",     					  10.0,       0.0,      10.0)   
gen.add("cte_threshold",                            double_t,   0,      "",     					  3.0,       0.0,      10.0)   
gen.add("epsi_threshold",                           double_t,   0,      "",     					  1.0,       0.0,      10.0) 

gen.add("kappa_for_vel_upperbound",                 double_t,   0,      "",      					  1,         0.0,      3.0)
gen.add("cte_for_vel_upperbound",                   double_t,   0,      "",      					  1.5,       0.0,      3.0)
gen.add("epsi_for_vel_upperbound",                  double_t,   0,      "",      					  1.5,       0.0,      3.0)



exit(gen.generate(PACKAGE, "trajectory_follower", "TrajectoryFollowerReconfigure"))
